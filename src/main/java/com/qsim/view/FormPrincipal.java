package com.qsim.view;

import com.qsim.main.QSim;
import com.qsim.model.Hora;
import com.qsim.model.NumericFieldParser;
import com.qsim.model.Producto;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JPanel;

public class FormPrincipal extends javax.swing.JPanel {

    private static final int ANCHO_MINIMO = 170;
    private static final int ALTO_MINIMO = 230;
    private static final int RELLENO = 40;

    private int serviceMean;
    private NumericFieldParser parser;
    private final List<Producto> productDatabase;
    public static List<Hora> hours;
    public static int stack = 0;

    /**
     * Creates new form FormPrincipal
     */
    public FormPrincipal() {
        this.productDatabase = defaultProductData();
        initComponents();
        mainPanel.setSize(0, 0);
        setSize(ANCHO_MINIMO, ALTO_MINIMO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        simulacionButton = new javax.swing.JButton();
        gastosButton = new javax.swing.JButton();
        inventarioButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(170, 230));
        setLayout(null);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("QSim");
        add(jLabel5);
        jLabel5.setBounds(20, 20, 130, 40);

        simulacionButton.setText("Simulación");
        simulacionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulacionButtonActionPerformed(evt);
            }
        });
        add(simulacionButton);
        simulacionButton.setBounds(20, 70, 130, 40);

        gastosButton.setText("Gastos");
        gastosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gastosButtonActionPerformed(evt);
            }
        });
        add(gastosButton);
        gastosButton.setBounds(20, 120, 130, 40);

        inventarioButton.setText("Inventario");
        inventarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventarioButtonActionPerformed(evt);
            }
        });
        add(inventarioButton);
        inventarioButton.setBounds(20, 170, 130, 40);

        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainPanel.setLayout(null);
        add(mainPanel);
        mainPanel.setBounds(170, 20, 300, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void simulacionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulacionButtonActionPerformed
        reemplazarPanel(new SimulacionPanel());
    }//GEN-LAST:event_simulacionButtonActionPerformed

    private void gastosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gastosButtonActionPerformed
        // equis de
    }//GEN-LAST:event_gastosButtonActionPerformed

    private void inventarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventarioButtonActionPerformed
        reemplazarPanel(new InventarioPanel());
    }//GEN-LAST:event_inventarioButtonActionPerformed
    
    public void reemplazarPanel(JPanel nuevoPanel) {
        mainPanel.removeAll();
        mainPanel.setSize(nuevoPanel.getSize());
        mainPanel.add(nuevoPanel);
        mainPanel.repaint();

        int ancho = ANCHO_MINIMO + mainPanel.getWidth() + RELLENO; // Un relleno separa controles y vista actual.
        int alto = Math.max(ALTO_MINIMO, mainPanel.getHeight() + 2 * RELLENO); // Altura del panel más dos rellenos.

        setSize(ancho, alto);
        QSim.frame.setSize(ancho, alto);
        QSim.frame.setLocationRelativeTo(null);
    }

    private void printHours(List<Hora> hours) {
        for (var hour : hours) {
            System.out.println("Hora: " + hour.id() + " | " + hour.tasaLlegadas() + " | " + hour.tasaServicio() + " | " + hour.clientes());
        }
    }

    private Producto getRandomProduct() {
        int numA = 0;
        int numB = productDatabase.size() - 1;
        Random random = new Random();
        return productDatabase.get(random.nextInt(numB - numA + 1) + numA);
    }

    private List<Producto> defaultProductData() {
        ArrayList<Producto> products = new ArrayList<>();

        products.add(new Producto(1, "Paracetamol", 5.0, 10.0));
        products.add(new Producto(2, "Ibuprofeno", 6.0, 12.0));
        products.add(new Producto(3, "Vitamina C", 3.0, 7.0));
        products.add(new Producto(4, "Analgésico", 4.0, 8.0));
        products.add(new Producto(5, "Antibiótico", 10.0, 20.0));
        products.add(new Producto(6, "Antiinflamatorio", 7.0, 15.0));
        products.add(new Producto(7, "Jarabe para la tos", 8.0, 16.0));
        products.add(new Producto(8, "Pastillas para la gripe", 9.0, 18.0));
        products.add(new Producto(9, "Colirio", 6.0, 12.0));
        products.add(new Producto(10, "Antiséptico", 5.0, 11.0));
        products.add(new Producto(11, "Crema antiarrugas", 15.0, 30.0));
        products.add(new Producto(12, "Protector solar", 12.0, 25.0));
        products.add(new Producto(13, "Loción hidratante", 8.0, 18.0));
        products.add(new Producto(14, "Shampoo anticaspa", 7.0, 14.0));
        products.add(new Producto(15, "Desodorante", 4.0, 9.0));
        products.add(new Producto(16, "Cepillo dental", 2.0, 5.0));
        products.add(new Producto(17, "Pasta dental", 3.0, 6.0));
        products.add(new Producto(18, "Enjuague bucal", 4.0, 8.0));
        products.add(new Producto(19, "Gasas estériles", 6.0, 12.0));
        products.add(new Producto(20, "Vendas elásticas", 7.0, 15.0));
        products.add(new Producto(21, "Algodón", 3.0, 7.0));
        products.add(new Producto(22, "Termómetro digital", 10.0, 20.0));
        products.add(new Producto(23, "Tijeras quirúrgicas", 15.0, 30.0));
        products.add(new Producto(24, "Guantes desechables", 8.0, 16.0));
        products.add(new Producto(25, "Mascarillas", 5.0, 11.0));
        products.add(new Producto(26, "Jeringas", 7.0, 15.0));
        products.add(new Producto(27, "Alcohol en gel", 6.0, 13.0));
        products.add(new Producto(28, "Pomada cicatrizante", 9.0, 19.0));
        products.add(new Producto(29, "Suplemento vitamínico", 12.0, 25.0));
        products.add(new Producto(30, "Gotas oftálmicas", 8.0, 17.0));

        return products;
    }

    private int getLambdaFromGaussDistribution(int mean) {
        Random random = new Random();
        double standardDeviation = Math.sqrt(mean);
        int randomValue = (int) Math.round(random.nextGaussian() * standardDeviation + mean);
        if (randomValue <= 0) {
            randomValue = 1;
        } else if (randomValue >= serviceMean) {
            randomValue = serviceMean - 1;
        }
        return randomValue;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gastosButton;
    private javax.swing.JButton inventarioButton;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton simulacionButton;
    // End of variables declaration//GEN-END:variables
}
